# Black
[tool.black]
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
setup.py
'''
include = '\.pyi?$'
line-length = 88

# Build system configs
[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0,<3.0.0"]

# interrogate
[tool.interrogate]
badge-format = "svg"
color = true
exclude = ["*/__init__.py"]
ext = []
generate-badge = "../"  # Output file location
ignore-magic = false
ignore-init-method = false
ignore-init-module = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-classes = false
ignore-nested-functions = false
ignore-overloaded-functions = false
ignore-semiprivate = false
ignore-setters = false
ignore-regex = ["__init__.py*", "^mock_.*"]  # Example regex
fail-under = 100
omit-covered-files = false
quiet = false
verbose = 0  # Possible values: 0 (minimal output), 1 (-v), 2 (-vv)
whitelist-regex = []

# Isort
[tool.isort]
atomic = true
filter_files = true
import_heading_firstparty = "Package Library"
import_heading_future = "Future Library"
import_heading_localfolder = "Local Folder"
import_heading_stdlib = "Standard Library"
import_heading_thirdparty = "Third Party Library"
include_trailing_comma = true
known_first_party = "chaturai"
known_third_party = "git, mpi4py, ntpath, numpy, pexpect, pytest, sphinx_rtd_theme, yaml"
line_length = 88
lines_between_types = 1
multi_line_output = 3

# mypy
[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

# Poetry
[tool.poetry]
authors = [
    "IDinsight DSEM <dsem@idinsight.org>",
]
description = "Your guide for your apprenticeship journey (National Apprenticeship Promotion Scheme)"
name = "chaturai"
package-mode = false
packages = [{include = "chaturai", from="src"}]
readme = "../README.md"
version = "0.1.0"

[tool.poetry-dynamic-versioning]
dirty = true
enable = true
metadata = true
style = "semver"
vcs = "git"

[tool.poetry.dependencies]
aiofiles = "^24.1.0"
aiolimiter = "^1.2.1"
alembic = "^1.13.1"
asyncpg = "^0.30.0"
bertopic = "^0.17.0"
boto3 = "^1.34.34"
colored = "^2.3.0"
dotmap = "^1.3.30"
fastapi = "^0.115.12"
google-cloud-aiplatform = "^1.71.1"
griffe = "^1.7.2"
gunicorn = "^23.0.0"
keybert = "^0.9.0"
keyphrase-vectorizers = "^0.0.13"
litellm = {extras = ["proxy"], version = "^1.67.2"}
logfire = {extras = ["fastapi", "redis", "system-metrics"], version = "^3.14.1"}
loguru = "^0.7.2"
openai = "^1.61.1"
opentelemetry-exporter-otlp = "1.32.1"
opentelemetry-instrumentation-aiohttp-client = "0.53b1"
opentelemetry-instrumentation-grpc = "0.53b1"
opentelemetry-instrumentation-httpx = "0.53b1"
opentelemetry-instrumentation-jinja2 = "0.53b1"
opentelemetry-instrumentation-requests = "0.53b1"
opentelemetry-instrumentation-sqlite3 = "0.53b1"
opentelemetry-instrumentation-starlette = "0.53b1"
opentelemetry-instrumentation-urllib = "0.53b1"
opentelemetry-instrumentation-urllib3 = "0.53b1"
prometheus-client = "^0.21.1"
psycopg2-binary = "^2.9.9"
pydantic = {extras = ["email"], version = "^2.10.6"}
pydantic-graph = "0.1.4"
pytesseract = "^0.3.13"
pytest-playwright = "^0.7.0"
python = ">=3.11,<3.13"
pydantic-settings = "^2.8.1"
redis = "^5.2.1"
requests = "^2.31.0"
schedule = "^1.2.1"
sentence-transformers = "^3.4.1"
sentry-sdk = { version = "2.23.1", extras = ["fastapi"] }
sqlalchemy = "^2.0.27"
tenacity = "^9.1.2"
termcolor = "^2.4.0"
tiktoken = "^0.8.0"
typer = "^0.15.1"
typing-extensions = "^4.12.2"
uvicorn-worker = "0.3.0"
vertexai = "^1.71.1"
opencv-python-headless = "^4.11.0.86"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "24.4.2"
detect-secrets = "^1.5.0"
fsspec = "^2025.3.2"
interrogate = "^1.5.0"
ipykernel = "^6.29.5"
isort = "5.13.2"
jupyter = "^1.1.1"
mypy = "1.11.0"
mypy-extensions = "1.0.0"
openpyxl = "^3.1.5"
pandas = "^2.2.3"
pre-commit = "^4.2.0"
pylint = "3.2.5"
pylint-pytest = "1.1.8"
pytest = "8.2.0"
pytest-bdd = "7.2.0"
pytest-cov = "5.0.0"
pytest-mock = "3.14.0"
pytest-order = "1.3.0"
pytest-randomly = "3.15.0"
pytest-xdist = "3.6.1"
ruff = "0.5.4"
s3fs = "^2025.3.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-glightbox = "^0.4.0"
mkdocs-material = "^9.6.12"
mkdocs-material-extensions = "^1.3.1"
mkdocs-open-in-new-tab = "1.0.3"
pymdown-extensions = "^10.9"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.scripts]
chaturai = "chaturai.entries.main:cli"

# Pytest
[tool.pytest.ini_options]
asyncio_mode = "auto"
bdd_features_base_dir = "tests/features/"
markers = ["costs-money"]

# Pytest coverage
[tool.coverage.report]
exclude_lines = [
    'if __name__ == "__main__"',
    "if __name__ == '__main__'",
    "def cli",
    "if TYPE_CHECKING:",
    "pragma: no cover",
]
omit = ["./src/chaturai/__init__.py"]

[tool.coverage.run]
branch = true
concurrency = ["greenlet", "thread"]
source = ["src"]

# Ruff
[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint.mccabe]
max-complexity = 10
